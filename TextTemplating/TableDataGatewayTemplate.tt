namespace <#= this.Context.Namespace #>
{
<# foreach(var import in this.Context.Imports) { #>
	using <#= import #>;
<# } #>

    /// <summary>
    /// <#= this.Context.TableName #> への TableDataGateway です。
    /// </summary>
	internal /* static */ class <#= this.Context.TypeName #> : <#= this.Context.Inherits #>
	{
		public static string TableName
		{
			get { return @"<#= this.Context.TableName #>"; }
		}

		public static KandaDbDataReader Select(<#= this.Context.CurrentEntity.TypeName #> criteria, DbConnection connection, DbTransaction transaction)
		{
			var reader = <#= this.Context.Inherits #>.CreateDataReader(connection, transaction);
	
			KandaDbDataMapper.MapToParameters(reader.Parameters, criteria);
			
			reader.CommandType = ComamndType.Text;
			reader.CommandText = string.Format(@"<#@ include file="t4\GatewaySelectStatementTemplate.t4" #>");
			reader.ExecuteReader();

			return reader;
		}

		public static int Insert(<#= this.Context.CurrentEntity.TypeName #> criteria, DbConnection connection, DbTransaction transaction)
		{
			var command = <#= this.Context.Inherits #>.CreateCommand(connection, transaction);

			KandaDbDataMapper.MapToParameters(command.Parameters, criteria);
			
			command.CommandType = ComamndType.Text;
			reader.CommandText = string.Format(@"<#@ include file="t4\GatewayInsertStatementTemplate.t4" #>");
			
			var affected = command.ExecuteNonQuery();

			return affected;
		}

		public int Update(<#= this.Context.CurrentEntity.TypeName #> criteria, DbConnection connection, DbTransaction transaction)
		{
			var command = <#= this.Context.Inherits #>.CreateCommand(connection, transaction);

			KandaDbDataMapper.MapToParameters(command.Parameters, criteria);
			
			command.CommandType = ComamndType.Text;
			command.CommandText = string.Format(@"<#@ include file="t4\GatewayUpdateStatementTemplate.t4" #>");
			
			var affected = command.ExecuteNonQuery();

			return affected;
		}

		#region Internal members...

		internal int Delete(<#= this.Context.CurrentEntity.TypeName #> criteria, DbConnection connection, DbTransaction transaction)
		{
			var command = <#= this.Context.Inherits #>.CreateCommand(connection, transaction);

			KandaDbDataMapper.MapToParameters(command.Parameters, criteria);
			
			command.CommandType = ComamndType.Text;
			command.CommandText = string.Format(@"<#@ include file="t4\GatewayDeleteStatementTemplate.t4" #>");
			
			var affected = command.ExecuteNonQuery();

			return affected;
		}

		internal static int Truncate()
		{
			return <#= this.Context.Inherits #>.Truncate(<#= this.Context.TableName #>);
		}

		#endregion
	}
}
